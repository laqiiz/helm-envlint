---
# Source: nginx/templates/pre-install-secret.yaml
# This shows a secret as a pre-install hook.
# A pre-install hook is run before the rest of the chart is loaded.
apiVersion: v1
kind: Secret
metadata:
  name: release-name-nginx
  labels:
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: nginx
  # This declares the resource to be a hook. By convention, we also name the
  # file "pre-install-XXX.yaml", but Helm itself doesn't care about file names.
  annotations:
    "helm.sh/hook": pre-install
type: Opaque
data:
  password: c2VjcmV0
  username: dXNlcjE=

---
# Source: nginx/templates/configmap.yaml
# This is a simple example of using a config map to create a single page static site.
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-nginx
  labels:
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: nginx
data:
  # When the config map is mounted as a volume, these will be created as files.
  index.html: "<h1>Hello</h1> <p>This is a test</p>"
  test.txt: test

---
# Source: nginx/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
  name: release-name-nginx
spec:
# Provides options for the service so chart users have the full choice
  type: "ClusterIP"
  clusterIP: ""
  ports:
    - name: http
      port: 8888
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/instance: release-name

---
# Source: nginx/templates/service-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-nginx-service-test"
  labels:
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/instance: release-name
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: nginx
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: curl
      image: radial/busyboxplus:curl
      command: ['curl']
      args:  ['release-name-nginx:8888']
  restartPolicy: Never

---
# Source: nginx/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  # This uses a "fullname" template (see _helpers)
  # Basing names on .Release.Name means that the same chart can be installed
  # multiple times into the same namespace.
  name: release-name-nginx
  labels:
    # The "app.kubernetes.io/managed-by" label is used to track which tool
    # deployed a given chart. It is useful for admins who want to see what
    # releases a particular tool is responsible for.
    app.kubernetes.io/managed-by: Tiller
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release
    # to all of the Kubernetes resources that were created as part of that
    # release.
    app.kubernetes.io/instance: release-name
    # This makes it easy to audit chart usage.
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: nginx
          image: "nginx:alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # This (and the volumes section below) mount the config map as a volume.
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: wwwdata-volume
          resources:
            # Allow chart users to specify resources. Usually, no default should
            # be set, so this is left to be a conscious choice to the chart
            # users and avoids that charts don't run out of the box on, e. g.,
            # Minikube when high resource requests are specified by default.
            {}
            
      volumes:
        - name: wwwdata-volume
          configMap:
            name: release-name-nginx

---
# Source: nginx/templates/post-install-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-nginx
  labels:
    # The "app.kubernetes.io/managed-by" label is used to track which tool deployed a given chart.
    # It is useful for admins who want to see what releases a particular tool
    # is responsible for.
    app.kubernetes.io/managed-by: Tiller
    # The "app.kubernetes.io/instance" convention makes it easy to tie a release to all of the
    # Kubernetes resources that were created as part of that release.
    app.kubernetes.io/instance: release-name
    # This makes it easy to audit chart usage.
    helm.sh/chart: nginx-0.1.0
    app.kubernetes.io/name: nginx
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
spec:
  template:
    metadata:
      name: release-name-nginx
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: nginx
    spec:
      # This shows how to use a simple value. This will look for a passed-in value
      # called restartPolicy. If it is not found, it will use the default value.
      # Never is a slightly optimized version of the
      # more conventional syntax: Never
      restartPolicy: Never
      containers:
        - name: post-install-job
          image: "alpine:latest"
          # All we're going to do is sleep for a while, then exit.
          command: ["/bin/sleep", "10"]

